name: Deploy to Production Kubernetes

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: amithbaliza/davinci-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/amithbaliza/davinci-backend
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Update deployment image
        run: |
          # Update the image in deployment files
          sed -i "s|your-registry/davinci-backend:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" k8s/backend-deployment.yaml
          sed -i "s|your-registry/davinci-backend:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" k8s/migration-job.yaml

      - name: Deploy to Kubernetes
        run: |
          echo "🚀 Starting deployment to Kubernetes..."

          # Apply namespace (safe to run multiple times)
          kubectl apply -f k8s/namespace.yaml

          # Apply secrets and config (only if they don't exist)
          if ! kubectl get secret davinci-secrets -n davinci-backend &> /dev/null; then
            echo "Creating secrets for the first time..."
            kubectl apply -f k8s/secrets.yaml
          else
            echo "Secrets already exist, skipping creation"
          fi

          # Deploy Redis (safe to run multiple times)
          kubectl apply -f k8s/redis.yaml

          # Wait for Redis to be ready
          echo "Waiting for Redis to be ready..."
          kubectl wait --for=condition=ready pod -l app=redis -n davinci-backend --timeout=300s || true

          # Delete old migration job if exists
          kubectl delete job davinci-migration -n davinci-backend --ignore-not-found=true

          # Run migration job
          echo "Running database migration..."
          kubectl apply -f k8s/migration-job.yaml

          # Wait for migration to complete
          echo "Waiting for migration to complete..."
          kubectl wait --for=condition=complete job/davinci-migration -n davinci-backend --timeout=600s

          # Check if migration was successful
          if kubectl get job davinci-migration -n davinci-backend -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' | grep -q "True"; then
            echo "✅ Migration completed successfully!"
          else
            echo "❌ Migration failed!"
            kubectl logs job/davinci-migration -n davinci-backend
            exit 1
          fi

          # Deploy backend application (rolling update)
          echo "Deploying backend application..."
          kubectl apply -f k8s/backend-deployment.yaml

          # Wait for rollout to complete
          echo "Waiting for deployment rollout..."
          kubectl rollout status deployment/davinci-backend -n davinci-backend --timeout=600s

      - name: Verify deployment
        run: |
          echo "🎉 Deployment completed successfully!"
          echo ""
          echo "📊 Deployment status:"
          kubectl get pods -n davinci-backend
          echo ""
          echo "🔗 Services:"
          kubectl get services -n davinci-backend
          echo ""
          echo "📈 HPA status:"
          kubectl get hpa -n davinci-backend || echo "HPA not yet available"
          echo ""
          echo "🌐 Ingress:"
          kubectl get ingress -n davinci-backend

      - name: Post deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment to production completed successfully!"
            echo "🔗 Your API is available at: https://api.yourdomain.com"
          else
            echo "❌ Deployment failed! Check the logs above for details."
          fi

      - name: Cleanup old images (optional)
        if: success()
        run: |
          echo "🧹 Cleaning up old container images..."
          # Keep only the last 5 images to save storage
          # This is optional and can be customized based on your needs
